variables:
  NPM_PACKAGE_SCOPE: "uuv"
  NPM_REPO: "registry.npmjs.org/"

stages:
  - install
  - lint
  - build
  - test
  - publish

# Caches
.node_modules-cache: &node_modules-cache
  key:
    files:
      - package-lock.json
  paths:
    - "node_modules"
    - "packages/assistant/node_modules"
    - "packages/docs/node_modules"
    - "packages/runner-commons/node_modules"
    - "packages/runner-cypress/node_modules"
    - "packages/runner-playwright/node_modules"
  policy: pull

install:
  image: node:20.13.1-slim
  stage: install
  script:
    - npm ci
  cache:
    - <<: *node_modules-cache
      policy: pull-push
  only:
    - master

lint:
  image: node:20.13.1-slim
  stage: lint
  script:
    - npm run nx run-many -- --all --target=lint
  allow_failure: true
  cache:
    - <<: *node_modules-cache
  needs:
    - install
  only:
    - master

build-runner-commons:
  image: node:20.13.1-slim
  stage: build
  script:
    - npm run nx build runner-commons
  cache:
    - <<: *node_modules-cache
  needs:
    - install
  artifacts:
    paths:
      - "packages/runner-commons/dist"
  only:
    - master

build-runner-cypress:
  image: node:20.13.1-slim
  stage: build
  script:
    - npm run nx generate:step-definitions runner-cypress
    - npm run nx generate:step-definitions-documentation runner-cypress
    - npm run nx build runner-cypress
    - cp ./LICENSE packages/runner-cypress/dist && cp ./CONTRIBUTING.md packages/runner-cypress/dist && cp ./DCO.txt packages/runner-cypress/dist
  needs:
    - install
    - build-runner-commons
  cache:
    - <<: *node_modules-cache
  artifacts:
    paths:
      - "packages/runner-cypress/dist"
      - "packages/runner-cypress/src/cucumber/step_definitions/cypress/generated"
      - "packages/docs/docs/04-wordings/01-generated-wording-description"
      - "packages/docs/docs/05-tools"
  only:
    - master

build-assistant:
  image: node:20.13.1-slim
  stage: build
  script:
    - npm run nx react:build assistant
    - npm run nx tsc:build assistant
    - npm run nx conf:build assistant
    - cp ./LICENSE packages/assistant/dist && cp ./CONTRIBUTING.md packages/assistant/dist && cp ./DCO.txt packages/assistant/dist
  needs:
    - install
  cache:
    - <<: *node_modules-cache
  artifacts:
    paths:
      - "packages/assistant/dist"
      - "packages/assistant/build"
  only:
    - master

build-docs:
  image: node:20.13.1-slim
  stage: build
  script:
    - npm run nx build docs
  needs:
    - install
    - build-runner-cypress
  cache:
    - <<: *node_modules-cache
  artifacts:
    paths:
      - "packages/docs/build"
  only:
    - master

test-cypress:
  image: cypress/browsers:node18.12.0-chrome107
  stage: test
  script:
    - npm ci
    - cd packages/runner-cypress && npm run test:run
  cache:
    - <<: *node_modules-cache
  needs:
    - install
    - build-runner-commons
    - build-runner-cypress
  only:
    - master

.publish:
  image: node:20.13.1-slim
  stage: publish
  cache:
    - <<: *node_modules-cache
  script:
    - echo "//${NPM_REPO}:_authToken=$NPM_ACCESS_TOKEN" >> .npmrc
    - cd ./packages/${PACKAGE_NAME}
    - npm publish --scope ${NPM_PACKAGE_SCOPE} --access public
  when: manual
  only:
    - master

publish-commons:
  extends: .publish
  variables:
    PACKAGE_NAME: "runner-commons"
  needs:
    - build-runner-commons

publish-cypress:
  extends: .publish
  variables:
    PACKAGE_NAME: "runner-cypress"
  needs:
    - build-runner-cypress

publish-assistant:
  extends: .publish
  variables:
    PACKAGE_NAME: "assistant"
  needs:
    - build-assistant

pages:
  image: ubuntu
  stage: publish
  script:
    - mkdir public
    - cp -r packages/docs/build/* ./public
  needs:
    - build-docs
  artifacts:
    paths:
      - public
  cache:
    - <<: *node_modules-cache
  when: manual
  only:
    - master
